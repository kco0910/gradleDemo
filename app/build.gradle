apply plugin: 'com.android.application'
apply from :"../test.gradle"
//apply from :"../base.gradle"
//apply from :"../file.gradle"
android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.fly.groovydemo"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

task("oneTask").doLast {
    println("oneTask")
}
//将copyTask添加到assembleRelease后执行
//不能直接使用copyTask.dependsOn assembleRelease,因为assembleRelease是动态生成的，
// 没有办法提前设定 assembleRelease 的依赖关系
//执行 gradlew copyTask 则会先执行assembleRelease,再执行copyTask
//如果不使用此方法，则可以gradlew assembleRelease copyTask
tasks.whenTaskAdded {
    task ->
        if (task.name.equals("assembleRelease")){
            oneTask.dependsOn assembleRelease
        }
}








